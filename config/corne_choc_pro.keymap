/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/behaviors.h>
#include <behaviors/unicode.dtsi>

&uc {
  default-mode = <UC_MODE_WIN_COMPOSE>;  // Replace with desired input system.
};

/ {
    chosen {
        zmk,physical-layout = &default_layout;
    };
};


/ {
        behaviors {
            hml: home_row_mod_left_shift {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "hold-preferred";
                tapping-term-ms = <200>;
                quick-tap-ms = <150>;
                bindings = <&mo>, <&kp>;
                hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 35 34 36 37 38 39 41 40 42 43 44 45>; // List of keys on the right side of the keyboard
                hold-trigger-on-release;
            };
            hrl: home_row_mod_left {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "balanced";
                tapping-term-ms = <150>;
                quick-tap-ms = <150>;
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 35 34 36 37 38 39>; // List of keys on the right side of the keyboard
                hold-trigger-on-release;
            };
            hmr: home_row_mod_right_shift {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "hold-preferred";
                tapping-term-ms = <200>;
                quick-tap-ms = <150>;
                bindings = <&mo>, <&kp>;
                hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 20 19 18 28 29 33 30 31 32 41 40 42 43 44 45>; // List of keys on the left side of the keyboard
                hold-trigger-on-release;
            };
            hrr: home_row_mod_right {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "balanced";
                tapping-term-ms = <150>;
                quick-tap-ms = <150>;
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 20 19 18 28 29 33 30 31 32 41 40 42 43 44 45>; // List of keys on the left side of the keyboard
                hold-trigger-on-release;
            };
            ltl: layer_tap_left {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "balanced";
                tapping-term-ms = <150>;
                quick-tap-ms = <150>;
                bindings = <&mo>, <&kp>;
                hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 35 34 36 37 38 39 43 44 45>; // List of keys on the right side of the keyboard
                hold-trigger-on-release;
            };
            ltr: layer_tap_right {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "balanced";
                tapping-term-ms = <150>;
                quick-tap-ms = <150>;
                bindings = <&mo>, <&kp>;
                hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 20 19 18 28 29 33 30 31 32 41 40 42>; // List of keys on the left side of the keyboard
                hold-trigger-on-release;
            };
            lts: layer_tap_space {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "balanced";
                tapping-term-ms = <100>;
                bindings = <&mo>, <&kp>;
                hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 20 19 18 28 29 33 30 31 32 41 40 42>; // List of keys on the left side of the keyboard
                hold-trigger-on-release;
            };
            lts2: layer_tap_space_2 {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "balanced";
                tapping-term-ms = <50>;
                bindings = <&mo>, <&kp>;
                hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 20 19 18 28 29 33 30 31 32 41 40 42>; // List of keys on the left side of the keyboard
                hold-trigger-on-release;
            };
            lm: lm {
                compatible = "zmk,behavior-macro-two-param";
                wait-ms = <0>;
                tap-ms = <0>;
                #binding-cells = <2>;
                bindings
                    = <&macro_param_1to1>
                    , <&macro_press &mo MACRO_PLACEHOLDER>
                    , <&macro_param_2to1>
                    , <&macro_press &kp MACRO_PLACEHOLDER>
                    , <&macro_pause_for_release>
                    , <&macro_param_2to1>
                    , <&macro_release &kp MACRO_PLACEHOLDER>
                    , <&macro_param_1to1>
                    , <&macro_release &mo MACRO_PLACEHOLDER>
                    ;
            };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        display-name = "BASIC";
                        bindings = <
  &kp LSHIFT    &kp Q       &kp W         &kp E       &kp R        &kp T &trans &trans &kp Y &kp U         &kp I        &kp O         &kp P          &kp BSPC
  &caps_word &hrl LGUI A &hrl LALT S   &hrl LCTL D &hml 1 F     &kp G &trans &trans &kp H &hmr 2 J      &hrr RCTL K  &hrr RALT L   &hrr RGUI SEMI &kp SQT
  &tog 3      &kp Z       &kp X         &kp C       &kp V        &kp B               &kp N &kp M         &kp COMMA    &kp DOT       &kp FSLH       &kp ESC
                         &mt LCTRL DEL &ltl 6 RET  &lt 8 ESC                           &ltr 4 BSPC   &lts 3 SPC   &ltr 5 TAB
                        >;
                };
                left_shift_layer {
                        display-name = "LSHIFT";
                        bindings = <
  &kp TAB    &kp Q       &kp W         &kp E       &kp R        &kp T &trans &trans &kp LS(Y) &kp LS(U)         &kp LS(I)        &kp LS(O)         &kp LS(P)          &kp LS(BSPC)
  &caps_word &hrl LS(LGUI) A &hrl LS(LALT) S     &hrl LS(LCTL) D      &trans       &kp G &trans &trans &kp LS(H) &kp LS(J)         &kp LS(K)        &kp LS(L)         &kp LS(SEMI)       &kp LS(SQT)
  &kp LSHFT  &kp Z       &kp X         &kp C       &kp V        &kp B               &kp LS(N) &kp LS(M)         &kp LS(COMMA)    &kp LS(DOT)       &kp LS(FSLH)       &kp LS(ESC)
                         &mt LCTRL DEL &lm 6 LSHIFT  &mt LS(LGUI) LS(ESC)              &kp LS(BSPC)   &kp LS(SPC)   &kp LS(TAB)
                        >;
                };
                right_shift_layer {
                        display-name = "RSHIFT";
                        bindings = <
  &kp LS(TAB)    &kp LS(Q)       &kp LS(W)         &kp LS(E)       &kp LS(R)        &kp LS(T) &trans &trans &kp Y &kp U         &kp I        &kp O         &kp P          &kp BSPC
  &caps_word     &kp LS(A)       &kp LS(S)         &kp LS(D)       &kp LS(F)        &kp LS(G) &trans &trans &kp H &trans        &hrr LS(RCTL) K  &hrr LS(RALT) L   &hrr LS(RGUI) SEMI      &kp SQT
  &kp LS(LSHFT)  &kp LS(Z)       &kp LS(X)         &kp LS(C)       &kp LS(V)        &kp LS(B)               &kp N &kp M         &kp COMMA    &kp DOT       &kp FSLH       &kp ESC
                         &kp LS(DEL) &kp LS(RET)  &kp LS(ESC)                           &lm 4 LSHIFT   &lm 3 LSHIFT   &lm 5 LSHIFT
                        >;
                };
                num_layer {
                        display-name = "NUMBER";
                        bindings = <
   &studio_unlock &kp LBKT  &kp N7 &kp N8 &kp N9   &kp RBKT   &trans &trans &trans &trans &trans &trans &trans &studio_unlock
   &trans         &hrl LGUI GRAVE &hrl LALT N4   &hrl LCTL N5 &hrl LSHIFT N6  &kp MINUS  &trans &trans &trans &trans &trans &trans &trans &trans
   &tog 3         &kp N1    &kp N1 &kp N2 &kp N3   &kp EQUAL                &trans &trans &trans &trans &trans &bootloader
                            &trans &kp N0 &kp BSLH                                 &trans &trans &trans      
                        >;
                };
                sym_layer {
                        display-name = "SYMBOL";
                        bindings = <
   &studio_unlock &kp LBRC  &kp AMPS &kp ASTRK &kp LPAR  &kp RBRC   &trans &trans &trans &trans &trans &trans &trans &studio_unlock
   &trans         &kp TILDE &kp DLLR &kp PRCNT &kp CARET &kp UNDER  &trans &trans &trans &trans &trans &trans &trans &trans
   &trans         &trans    &kp EXCL &kp AT    &kp HASH  &kp PLUS                 &trans &trans &trans &trans &trans &bootloader
                            &trans   &kp RPAR  &kp PIPE                                 &trans &trans &trans      
                        >;
                };
                fn_layer {
                        display-name = "FUNCTION";
                        bindings = <
   &studio_unlock &kp F12 &kp F7 &kp F8 &kp F9 &trans  &trans &trans &trans &trans &trans &trans &trans &trans
   &trans &kp F11 &kp F4 &kp F5 &kp F6 &uc 0x2014 0  &trans &trans &trans &trans &trans &trans &trans &trans
   &trans &kp F10 &kp F1 &kp F2 &kp F3 &trans                &trans &trans &trans &trans &trans &trans
                  &trans &studio_unlock &trans                             &trans &trans &trans      
                        >;
                };
                nav_layer {
                        display-name = "NAV";
                        bindings = <
   &studio_unlock &kp LBKT  &kp N7 &kp N8 &kp N9   &kp RBKT   &trans &trans &trans &trans &trans &trans &trans &trans
   &mo 7          &hrl LGUI GRAVE &hrl LALT N4   &hrl LCTL N5 &hrl LSHIFT N6 &kp MINUS  &trans &trans &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &trans &trans
   &bootloader    &kp N0    &kp N1 &kp N2 &kp N3   &kp EQUAL                &kp HOME  &kp PG_DN &kp PG_UP &kp END   &trans &trans
                            &trans &trans &kp BSLH                                 &trans &trans &trans      
                        >;
                };
                bt_layer {
                        display-name = "BT";
                        bindings = <
   &studio_unlock &bt BT_SEL 0 &bt BT_SEL 1    &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans &trans &trans &trans &trans &trans &trans &trans
   &trans         &trans       &trans          &trans       &trans       &trans       &trans &trans &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &trans &trans
   &bootloader    &bt BT_CLR   &rgb_ug RGB_TOG &sys_reset   &bootloader  &trans                     &kp HOME  &kp PG_DN &kp PG_UP &kp END   &trans &trans
                  &trans       &trans          &trans                                                      &trans &trans &trans      
                        >;
                };
                nav_layer_two {
                        display-name = "NAV2";
                        bindings = <
   &studio_unlock &kp LBKT  &kp LG(N7) &kp LG(N8) &kp LG(N9)   &kp RBKT   &trans &trans &trans &trans &trans &trans &trans &trans
   &mo 7          &kp GRAVE &kp LG(N4) &kp LG(N5) &kp LG(N6)   &kp MINUS  &trans &trans &kp LG(LC(LEFT))  &kp LG(LC(DOWN))  &kp LG(LC(UP))    &kp LG(LC(RIGHT)) &trans &trans
   &bootloader    &kp N0    &kp LG(N1) &kp LG(N2) &kp LG(N3)   &kp EQUAL                &kp HOME  &kp PG_DN &kp PG_UP &kp END   &trans &trans
                            &trans &trans &kp BSLH                                 &trans &trans &trans      
                        >;
                };
        };
};

